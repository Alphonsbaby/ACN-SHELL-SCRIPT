1. write a shell script program to display name, age, and family name.

echo"enter the name"
read a
echo "enter the age"
read b
echo "enter the family name"
read c
echo "name is "$a "age is "$b"family name is"$c



2. write a shell script program to add two numbers.

echo "enter the 1 st number"
read a
echo "enter the 2 nd number"
read b
s=`expr $a + $b `
echo "sum is" $s



3. Write a shell script to use the 8 special variables.

echo "filename::"$0
echo "varible ::"$n
echo "argument::"$#
echo "double quoted argument::"$*
echo "process id::"$$
echo "process number::"$!
echo "all argu ments::"$@



4. Write a shell script to Display the process id of your current shell.

#!/bin/bash
echo "demo program"
echo "PID is"$$
~                 

5. Write a shell script to display your name, current date, time, username and current directory.

#!/bin/bash
echo "hellow,$LOGNAME"
echo "current date `date`"
echo "user `whoami`"
echo "current directory `pwd`"


6. Write a shell script to store and display the names of your family members using array.

name[0]="anu"
name[1]="alphons"
name[2]="aneesha"
name[3]="albins"
echo "family members name ${name[0]}"
echo "family members name ${name[1]}"
echo "family members name ${name[2]}"
echo "family members name ${name[3]}"



7. Write a shell script program to store 10 and 20 in variables a and b. Then apply 8 arithmetic
operations and display the output.

a=10
b=20
s=`expr $a + $b`
echo "add 2 number "$s
d=`expr $a \* $b`
echo "multiply 2 number"$d
f=`expr $a / $b`
echo "divide 2 number"$f
g=`expr $a - $b`
echo "substract 2 numbers"$g


8. Write a shell script program to store 10 and 20 in variables a and b. Then apply 6 relational
operations and display the output.

a=10
b=20
if [ $a -eq $b ]
then
        echo "a is equal to b"
else
        echo"not equal"
fi
if [ $a -ne $b ]
then
        echo "a is not equal to b"
else
        echo "equal"

fi
if [ $a -gt $b ]
then
        echo "a is greater than b"
else
        echo "a is not gt b"

fi
if [ $a -ge $b ]
then
        echo "a is ge to b"
else
        echo "a is not ge to b"


fi
if [ $a -lt $b ]
then
        echo "a is less than b"
else
        echo" a is not less than b"
fi
if [ $a -le $b ]
then
        echo "a is le to b"
else
        echo "a is not le to b"
fi


9. Write a shell script program to store abc and efg in variables a and b. Then apply string
operations and display the output.

#!/bin/bash
a="abc"
b="efg"
if [ $a = $b ]
then
        echo "both string is same"
else
        echo "not same"

fi
if [ $a != $b ]
then
        echo "not same"
else
        echo " same"

fi
if [ $a \> $b ]
then
        echo "a greater than b"
else
        echo "b not greater  than a"
fi
if [ $a \< $b ]
then
        echo "a is less than b"
else
        echo "a is notless than b"
fi
if [ -n $b ]
then
        echo "not empty "
else
        echo "empty"
fi
if [ -z $b ]
then
        echo "empty "
else
        echo "not empty"
fi


10. Write a shell script to use File Test operators and show the output.

!/bin/sh

file="/home/sjcet/lab/program1.sh"

if [ -r $file ]
then
   echo "File has read access"
else
   echo "File does not have read access"
fi

if [ -w $file ]
then
   echo "File has write permission"
else
   echo "File does not have write permission"
fi

if [ -x $file ]
then
   echo "File has execute permission"
else
   echo "File does not have execute permission"
fi

if [ -f $file ]
then
   echo "File is an ordinary file"
else
   echo "This is sepcial file"
fi

if [ -d $file ]
then
   echo "File is a directory"
else
   echo "This is not a directory"
fi

if [ -s $file ]
then
   echo "File size is not zero"
else
   echo "File size is zero"
fi

if [ -e $file ]
then
   echo "File exists"
else
   echo "File does not exist"
fi
      

11. Write a shell script to accept a password and check whether it is matching with the existing
password. Display appropriate messages.

pass="password"
echo "enter the password"
read p
if [ $p = $pass ]
then
        echo" NOW LOGGED"
else
        echo "password is not correct plz enter the valid password "
fi


12. Write a shell script to accept two numbers a and b. Compare these numbers and Display
appropriate messages. ( Equal, greater than, less than) using if..elif

#!/bin/bash
a=10
b=20
if [ $a -eq $b ]
then
        echo "a is equal to b"
elif [ $a -gt $b ]
then

        echo "a is greater than b"
elif [ $a -lt $b ]
then
        echo "a is less than b"
else
        echo" a is not less than b"
fi



13. Write a shell script to accept a fruit name and display colour of the fruit using case..esac. and
display don't know if not matching any case.


#!/bin/hash
echo "enter the friut name"
read FRUIT
case "$FRUIT" in
   "apple") echo "it is green" 
   ;;
   "chilly") echo "it is red." 
   ;;
   "coco") echo "it is black" 
   ;;
esac



14. Write a shell script to display odd numbers less than 10 using while loop.

#!/bin/bash
index=0
while [ $index -lt 10 ]
do
  REMAINDER=$(( $index % 2 ))
  if [ $REMAINDER -ne 0 ]
  then
    echo $index
  fi
  index=$(($index+1))
done


15. Write a shell script to display even numbers upto 10 using for loop.


#!/bin/bash
for index in {2..10..2}
do
echo "even numbers ::$index"
done
~      


16. Write a shell script to display your name 10 times using until loop.

#!/bin/bash
#!/bin/sh

a=0

until [ ! $a -lt 10 ]
do
   echo "alphonsa"
   a=`expr $a + 1`
done


17. Write a shell script to display a menu using select loop. Display appropriate messages using
if..else or case..esac

#!/bin/bash

echo "SELECT YOUR FAVORITE FRUIT";
echo "1. Apple"
echo "2. Grapes"
echo "3. Mango"
echo "4. Exit from menu "
echo -n "Enter your menu choice [1-4]: "

while :
do

read choice

case $choice in
  1)  echo "You have selected the option 1"
      echo "Selected Fruit is Apple. ";;
  2)  echo "You have selected the option 2"
      echo "Selected Fruit is Grapes. ";;
  3)  echo "You have selected the option 3"
      echo "Selected Fruit is Mango. ";;
  4)  echo "Quiting ..."
      exit;;
  *) echo "invalid option";;

esac
  echo -n "Enter your menu choice [1-4]: "
done


18. Write a shell script program to show the use of break statement.

#!/bin/bash
a=0

while [ $a -lt 10 ]
do
   echo $a
   if [ $a -eq 5 ]
   then
      break
   fi
   a=`expr $a + 1`
done


19. Write a shell script program to show the use of continue statement.

#!/bin/bash
NUMS="1 2 3 4 5 6 7"

for NUM in $NUMS
do
   Q=`expr $NUM % 2`
   if [ $Q -eq 0 ]
   then
      echo "Number is an even number!!"
      continue
   fi
   echo "Found odd number"
done


20. Write a shell script program to read a number and print it in reverse order. 

echo "enter the number"
read n
sd=0
rev=0

while [ $n -gt 0 ]
do
    sd=`expr $n % 10`
    rev=`expr $rev \* 10 + $sd`
    n=`expr $n / 10 `
done

echo "Reverse number of entered digit is $rev"



21. Write a shell script program to print count of files and subdirectories in the specified directory.

#!/bin/bash
START=$HOME
[ $# -eq 1 ] && START=$1 || :

if [ ! -d $START ]
then
        echo "$START not a directory!"
        exit 1
fi
DIRS=$(find "$START" -type d)

for d in $DIRS
do
   [ "$d" != "." -a "$d" != ".." ] &&  echo "$d dirctory has $(ls -l $d | wc -l) files" || :
done


22. Write a shell script program to read a number and print odd or even using function.

#!/bin/bash
echo "enter the number"
read n
function oddeven
{
r=0
    sd=`expr $n % 2`

   if [ $sd = $r ]
then
     echo "THE GIVEN NUMBER IS EVEN"
else
     echo "THE GIVEN NUMBER IS ODD"
fi

}
r=`oddeven $n`
echo "$r"



23. Write a shell script to calculate simple interest.


echo "enter the p[rincipal value"
read a
echo "enter the rate of interset "
read b
echo "enter the time period"
read c
p=`expr $a \* $b \* $c / 100`
echo "simple interset is"
echo $p


24. Write a shell Script to determine largest among three integer number.

#!/bin/bash
#!/bin/bash
echo "enter the 1 st number"
read a
echo "enter the 2 nd number"
read b
echo "enter the 3 rd  number"
read c
if [ $a -ge $b ] && [ $a -ge $c ]
then
        echo "1 st number is larger"
elif [ $b -ge $c ]  && [ $b -ge $a ]
then
        echo "2 nd number is larger"
else
        echo "3rd number is larger"
fi





25. Write a shell script to determine a given year is leap year or not.

#!/bin/bash
echo "Enter year (YYYY): "
read y
a=`expr $y % 4`
b=`expr $y % 100`
c=`expr $y % 400`
if [ $a -eq 0 -a $b -ne 0 -o $c -eq 0 ]
then
        echo "$y is leap year"
else
        echo "$y is not a leap year"

fi

26. Write a shell script to print multiplication table of given number using while statement.

#!/bin/bash
echo "enter the number"
read p
i=1
while [ $i -le 10 ]
do
  echo "$p x $i = $((p*i))"
  i=$((i+1))
done



27. Write a shell script to compare two string.

#!/bin/bash
echo "enter the 1 st string"
read a
echo "enter the 2 nd string"
read b
if [ $a == $b ]
then
        echo "both strings are same"
else
        echo "both string are not same"
fi



28. Write a shell script to read and check the directory exists or not, if not make directory.

#!/bin/bash
echo "Enter directory name"

read dirname

if [ ! -d "$dirname" ]

then

echo "File doesn't exist. Creating now"

mkdir ./$dirname

echo "File created"

else

echo "File exists"

fi



29. Write a shell script to implement menu driven program to perform all arithmetic operation
using case statement.


#!/bin/bash
echo "enter the two  number"
read n
read m

echo "SELECT YOUR ARITHMETIC OPERATION";
echo "1. ADDITION"
echo "2. DIVISION"
echo "3. MULTIPLICATION"
echo "4. Exit from menu "
echo -n "Enter your menu choice [1-4]: "

while :
do

read choice

case $choice in
  1)  s=`expr $n + $m`
      echo "Sum of the two number "$s;;
  2)  s=`expr $n / $m`
      echo "division of  two number "$s;;

  3)  s=`expr $n \*  $m`
      echo "multi of  two number "$s;;

  4)  echo "Quiting ..."
      exit;;
  *) echo "invalid option";;

esac
  echo -n "Enter your menu choice [1-4]: "
done




30. Write a shell script to implement menu driven program to : (i). display list of directory
contents (ii). Name of current directory (iii). Who is logged on

#!/bin/bash
i="y"

while [ $i = "y" ]
do
echo "1.List of directory contents"
echo "2.Name of current directory"
echo "3.Who is logged on"
echo "Enter your choice"
read ch
case $ch in
    1)echo `ls`;;
    2)echo `pwd`;;
    3)echo `w`;;
    *)echo "Invalid choice";;
esac
echo "Do u want to continue ?"
read i
if [ $i != "y" ]
then
    exit
fi
done
~     

31. Write a shell script to print following pattern.
*
* *
* * *
* * * *

#!/bin/bash
rows=4
for((i=1; i<=rows; i++))
do
  for((j=1; j<=i; j++))
  do
    echo -n "* "
  done
  echo
done
~                                                                                                                                                                     

32. Write a shell script to accept USERNAME, PASSWORD, PHONE NUMBER, EMAIL ID, DATE OF
BIRTH from the user and Display all the details only if the validation for each field is successful.

echo "Enter the Phone number:"
read c
echo "Enter the E-mail ID:"
read d
echo "Enter the Date of Birth:"
read e
s='alphons'
n='baby'
m=7025868035
h='alp@gmail.com'
t=23/07/1998
if [ $s = $a ]
then
        echo "The Username is valid and username is:$a"
else
        echo "The Username is invalid:"
fi
if [ $n = $b ]
then
         echo "The Password is valid and password:$b"
else
        echo "The Password ia invalid"
fi
if [ $m = $c ]
then
        echo "The Phone number is valid and phone number is:$c"
else
        echo "The Phone number is invalid"
fi
if [ $h = $d ]
then
        echo "The Email id is valid and email id is:$d"
else
        echo "The Email id is invalid"
fi
if [ $t = $e ]
then
        echo "The date of Brith is valid:$e"
else
        echo "The date of birth is invalid"

fi



33. Create a data file ‘Sample.data’ containing 5 integer numbers, one on each line. Write a shell
script to compute the average of these numbers by reading the file ‘Sample.data’.

while read -r num; do
        sum=`expr $sum + $num`
done < sample.data
avg=`expr $sum / 5`
echo "Average:$avg"

34. Write a shell script to Display Disk usage, currently working processes, Month’s calendar, date and
time.

echo "Today is $(date)"
echo ""

echo "Calendar :"
cal

echo "currently working processes : $(who | wc -l)"

echo "disk usage ::$(df -H)"


35. Write a shell script to Copy the contents of file1 to file2 and and Search for a word in a file2.

cp pro35-1 pro35-2

36. Write a Shell program to find the smallest and largest numbers from a set of numbers.

echo "enter size of an array"
read n
for((i=0;i<n;i++))
do
echo " enter $((i+1)) number"
read nos[$i]
done
echo "number entered are"
for((i=0;i<n;i++))
do
echo ${nos[$i]}
done
small=${nos[0]}
greatest=${nos[0]}
for((i=0;i<n;i++))
do
if [ ${nos[$i]} -lt $small ]; then
small=${nos[$i]}
elif [ ${nos[$i]} -gt $greatest ]; then
greatest=${nos[$i]}
fi
done
echo "smallest number in an array is $small"
echo "greatest number in an array is $greatest"


37. Write a shell script to check whether a number is Prime or not.

#!/bin/bash
echo "enter number"
read num
function prime
{
for((i=2; i<=num/2; i++))
do
  if [ $((num%i)) -eq 0 ]
  then
    echo "$num is not a prime number."
    exit
  fi
done
echo "$num is a prime number."
}
r=`prime $number`
echo "$r"
~         

38. Write a shell script to check whether a string is Palindrome or not.

#!/bin/bash

echo Enter the string
read s
echo $s > temp
rvs="$(rev temp)"
if [ $s = $rvs ]
then
echo "it is palindrome"
else
echo " it is not a palindrome"
fi



39. Write a shell script to check whether the number is EVEN or ODD.

#!/bin/bash
echo "enter the number"
read n
r=0
    sd=`expr $n % 2`

   if [ $sd = $r ]
then
     echo "THE GIVEN NUMBER IS EVEN"
else
     echo "THE GIVEN NUMBER IS ODD"
fi
~  

40. Write a shell script to count the number of vowels in a string.

#!/bin/sh

echo -n "Enter a line of text: "
read string
vowCount=$(echo $string | grep -o -i "[aeiou]" | wc --lines)
echo "The given string has $vowCount vowels"


41. Write a shell script to find the Factorial of a number.

#!/bin/bash
echo "Enter a number"
read num

fact=1

while [ $num -gt 1 ]
do
  fact=$((fact * num))
  num=$((num - 1))
done

echo "factorial is $fact"
~                                 

42. Write a shell script to display the Fibonacci series with given number of elements.

#!/bin/bash
echo "enter the  number "
read N

a=0
b=1

echo "The Fibonacci series is : "

for (( i=0; i<N; i++ ))
do
    echo -n "$a "
    fn=$((a + b))
    a=$b
    b=$fn
done


43. Write a shell script to find the area of a circle with the given radius.

echo "enter the radius of circle"
read r
PI=3.14159
A=$(echo "$PI*($r^2)"|bc)
echo "area is ::$A"


44. Write a shell script that computes the gross salary of an employee according to the following
rules: i)If basic salary is < 1500 then HRA =10% of the basic and DA =90% of the basic.ii)If basic
salary is >=1500 then HRA =Rs500and DA=98% of the basic. The basic salary is entered
interactively through the keyboard.

echo "enter the basic salary:"

read bsal

if [ $bsal -lt 1500 ]

then

gsal=$((bsal+((bsal/100)*10)+(bsal/100)*90))

echo "The gross salary : $gsal"

fi

if [ $bsal -ge 1500 ]

then

gsal=$(((bsal+500)+(bsal/100)*98))

echo "the gross salary : $gsal"

fi
~      

45. Write a Shell program to find the second highest number from a set of numbers.         

echo “Enter the number of elements:”
read n
a=0
b=0
for((i = 1 ; i <= n ; i++)) do
echo “Enter the number:”
read no
if [ $no -gt $a ]
then
b=$a
a=$no
elif [ $no -gt $b ]
then
b=$no
fi
done
echo “The second highest number is : $b”
~                                                  
